{"version":3,"sources":["components/GridCircle.js","components/GridLine.js","components/GridLegend.js","components/Grid.js","components/RadarPath.js","components/RadarCircle.js","components/Radar.js","components/RadarChart.js","components/GradientLegend.js","UsOverall.js","data/stateData.js","data/readData.js","components/Map.js","components/TeleworkLegend.js","components/ScrollingSteps.js","UsByState.js","index.js"],"names":["GridCircle","gridCircleData","stateAbbr","radius","telework","map","n","assignedClassName","id","className","r","length","fill","stroke","fillOpacity","strokeWidth","labelTexts","textAnchorOptions","GridLine","mobility","rScale","angleSlice","m","i","x1","y1","x2","range","Math","cos","PI","y2","sin","textAnchor","y","t","idx","x","dy","GridLegend","axisCircleNum","reverse","Grid","region","RadarPath","data","colorScale","radarLine","lineRadial","curve","curveCardinalClosed","d","value","domain","angle","values","residential","state_abbr","RadarCircle","dotRadius","modifiedRScale","posXCal","posYCal","cx","cy","Radar","mobile","radarData","state","Region","percent_telework","residential_change_diff","forEach","push","type","RadarChart","transform","GradientLegend","width","height","offset","stopColor","initialMobile","window","innerWidth","initialDimensions","stateSize","MARGIN","top","right","bottom","left","gridDomain","Object","keys","slice","UsOverall","useState","dimensions","setDimensions","setMobile","containerRef","useRef","updateDimensions","current","clientWidth","useEffect","addEventListener","scaleLinear","ref","stateData","state_full","state_postal","row","column","readData","url","setData","csv","then","rawData","s","groce_pharm_change_diff","retail_recreation_change_diff","transit_change_diff","workplaces_change_diff","parks_change_diff","Map","obj","JSON","stringify","onChangeTooltipValue","Set","statePaddingX","statePaddingY","y_row","x_column","lowerMobilityStates","handleMouseOut","includes","onMouseOver","selData","circlePosition","circleX","circleY","updatedData","handleMouseOver","onMouseOut","join","TeleworkLegend","strokeDasharray","ScrollingSteps","direction","selectAll","style","select","classed","initialTooltipValue","scroller","scrollama","UsByState","tooltipValue","setTooltip","hovered","setHovered","chartContainerRef","textsContainerRef","handleStepEnter","index","element","currentStep","attr","$graphic","Stickyfill","add","node","$step","setup","step","nodes","onStepEnter","setupScroller","position","h","opacity","round","data-step","App","href","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6f3202a7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GridCircle = ({gridCircleData, stateAbbr, radius, telework}) => {\n  return gridCircleData.map((n) => {\n    let assignedClassName;\n    if ((n === 2) && (telework >= 30)){\n      assignedClassName = \"telework\"\n    } \n    return (\n      <g key={`${stateAbbr}-${n}`}>\n        <circle \n          id={n === 2 // only give id to the biggest circle grid\n          ? `${stateAbbr}-grid`\n          : null}\n          className={assignedClassName}\n          r={(radius / (gridCircleData.length - 1)) * n}\n          fill={n === 2 // only give fill color to the biggest circle grid\n          ? \"#CDCDCD\"\n          : \"none\"}\n          stroke=\"#fff\"\n          fillOpacity={0.2}\n          strokeWidth={stateAbbr === \"us\" // if its overall us radar chart, give thicker stroke\n          ? 2.5\n          : 1}/>\n      </g>\n    )\n  });\n};\n\nexport default GridCircle;\n","import React from \"react\";\n\nconst labelTexts = [[\"Retail\",\"Recreation\"], \n  [\"Grocery\",\"Pharmacy\"],\n  [\"Parks\"],\n  [\"Transit\", \"Stations\"],\n  [\"Workplaces\"]]\n\nconst textAnchorOptions = [\"middle\", \"start\", \"start\", \"end\", \"end\"]\n\nconst GridLine = ({ stateAbbr, mobility, rScale, angleSlice  }) => {\n\n   return mobility.map((m,i) => (\n      <g key={`${stateAbbr}-${m}`}>\n        <line\n          x1={0}\n          y1={0}\n          x2={rScale.range()[1] * 1.1 * Math.cos(angleSlice * i - Math.PI / 2)}\n          y2={rScale.range()[1] * 1.1 * Math.sin(angleSlice * i - Math.PI / 2)}\n          stroke=\"#fff\"\n          strokeWidth={stateAbbr === \"us\" ? 2.5 : 1} // give overall us radar thicker stroke\n        />\n        {stateAbbr === \"AK\"  // if its alaska, give mobility labels\n          ? <text className=\"legend\" textAnchor={textAnchorOptions[i]} y={rScale.range()[1] * 1.5 * Math.sin(angleSlice * i - Math.PI / 2)}>{labelTexts[i].map((t,idx) => <tspan x={rScale.range()[1] * 1.2 * Math.cos(angleSlice * i - Math.PI / 2)} dy={idx*10}>{t}</tspan>)}</text>\n          : null\n        }\n        {stateAbbr === \"us\" // if its overall us, give mobility labels\n          ? <text className=\"legend\" textAnchor={textAnchorOptions[i]} y={rScale.range()[1] * 1.1 * Math.sin(angleSlice * i - Math.PI / 2)}>{labelTexts[i].map((t,idx) => <tspan x={rScale.range()[1] * 1.1 * Math.cos(angleSlice * i - Math.PI / 2)} dy={idx*10}>{t}</tspan>)}</text>\n          : null\n        }\n \n        \n      </g>\n    ))\n}\n\nexport default GridLine;","import React from \"react\";\n\nconst GridLegend = ({stateAbbr, gridCircleData, radius}) => {\n  return gridCircleData.map((n) => (\n    <g key={`${stateAbbr}-${n}`}>\n      {stateAbbr === \"us\" // if its overall us radar, give percent legend\n        ? <text\n            className=\"legend\"\n            y={-(radius / (gridCircleData.length-1)) * n}\n            dy=\"0.8em\">\n              {`${100*(n-1)/2}%`}\n          </text>\n        : null \n      }\n    </g>\n  ));\n};\n\nexport default GridLegend;\n","import React from \"react\";\nimport { range } from \"d3-array\";\nimport GridCircle from \"./GridCircle\";\nimport GridLine from \"./GridLine\";\nimport GridLegend from \"./GridLegend\";\n\n// create data for grid circles\n// each radar has two grid circles\nconst axisCircleNum = 2;\nconst gridCircleData = range(0, axisCircleNum + 1).reverse();\n\nconst Grid = ({\n  stateAbbr,\n  region,\n  mobility,\n  radius,\n  rScale,\n  angleSlice,\n  telework\n}) => {\n  return (\n    <g>\n      <GridCircle \n        gridCircleData={gridCircleData} \n        stateAbbr={stateAbbr}\n        region={region}\n        radius={radius} \n        telework={telework}/>\n      <GridLine\n        stateAbbr={stateAbbr}\n        mobility={mobility}\n        rScale={rScale}\n        angleSlice={angleSlice}\n      />\n      <GridLegend\n        gridCircleData={gridCircleData} \n        stateAbbr={stateAbbr} \n        radius={radius}\n        />\n    </g>\n  );\n};\n\nexport default Grid;\n","import React from \"react\";\nimport { lineRadial, curveCardinalClosed } from \"d3-shape\";\n\nconst RadarPath = ({ data, rScale, angleSlice, colorScale }) => {\n  // radial line generator, thanks to d3 woo hoo! \n  const radarLine = lineRadial()\n    .curve(curveCardinalClosed)\n    .radius((d) => {\n      // if it's over 50% or below -50%, don't go beyond the chart\n      if (d.value >= rScale.domain()[1]) {\n        return rScale.range()[1];\n      } else if (d.value <= rScale.domain()[0]) {\n        return rScale.range()[0];\n      } else {\n        return rScale(d.value);\n      }\n    })\n    .angle((d, i) => i * angleSlice);\n  return (\n      <path\n        d={radarLine(data.values)}\n        fill={colorScale(data.residential)}\n        stroke={colorScale(data.residential)}\n        fillOpacity={.3}\n        strokeWidth={data.state_abbr === \"us\" ? 2.5 : 1.5}\n      />\n    \n  );\n};\n\nexport default RadarPath;\n","import React from \"react\";\n\n\nconst RadarCircle = ({ data, stateAbbr, rScale, angleSlice, colorScale }) => {\n  const dotRadius = stateAbbr === \"us\" ? 4 : 2.5;\n\n  return data.values.map((d, i) => {\n    const posXCal = Math.cos(angleSlice * i - Math.PI / 2);\n    const posYCal = Math.sin(angleSlice * i - Math.PI / 2);\n\n    // if it's over 50% or below -50%, don't go beyond the chart\n    let modifiedRScale;\n    if (d.value >= rScale.domain()[1]) {\n      modifiedRScale = rScale.range()[1];\n    } else if (d.value <= rScale.domain()[0]) {\n      modifiedRScale = rScale.range()[0];\n    } else {\n      modifiedRScale = rScale(d.value);\n    }\n\n    return (\n      <circle\n        key={`${d}+${i}`}\n        cx={modifiedRScale * posXCal}\n        cy={modifiedRScale * posYCal}\n        r={dotRadius}\n        fill={colorScale(data.residential)}\n      />\n    );\n  });\n};\n\nexport default RadarCircle;\n","import React from \"react\";\nimport RadarPath from \"./RadarPath\";\nimport RadarCircle from \"./RadarCircle\";\n\nconst Radar = ({\n  data,\n  stateAbbr,\n  mobility,\n  rScale,\n  angleSlice,\n  colorScale,\n  mobile\n}) => {\n  // prepare data for radar chart\n  const radarData = {\n    state: data.state,\n    state_abbr: data[\"State Code\"],\n    region: data.Region,\n    percent_telework: data.percent_telework,\n    residential: data.residential_change_diff,\n    values: []\n  };\n  mobility.forEach((m, i) => {\n    radarData.values.push({\n      type: m,\n      value: data[m]\n    });\n  });\n  \n  return (\n    <g>\n      <RadarPath\n        data={radarData}\n        rScale={rScale}\n        angleSlice={angleSlice}\n        colorScale={colorScale}\n      />\n      <RadarCircle\n        data={radarData}\n        stateAbbr={stateAbbr}\n        rScale={rScale}\n        angleSlice={angleSlice}\n        colorScale={colorScale}\n      />\n      { stateAbbr !== \"us\" // if its us radar chart, don't put state label in the middle \n        ? <text \n            dy={mobile && stateAbbr !== \"AK\" ? -rScale.range()[1] : 0}\n            className=\"state-abbr\">\n            {stateAbbr}\n          </text>\n        : null\n      }\n    </g>\n  );\n};\n\nexport default Radar;\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport Radar from \"./Radar\";\n\nconst RadarChart = ({\n  data,\n  stateAbbr,\n  region,\n  mobility,\n  radius,\n  rScale,\n  angleSlice,\n  colorScale,\n  mobile\n}) => {\n\n  return (\n    <g transform={stateAbbr===\"us\" ? `translate(0, ${25})` : `translate(0)`}>\n      <Grid\n        stateAbbr={stateAbbr}\n        region={region}\n        mobility={mobility}\n        radius={radius}\n        rScale={rScale}\n        angleSlice={angleSlice}\n        telework={data.percent_telework}/>\n      <Radar\n        data={data}\n        stateAbbr={stateAbbr}\n        mobility={mobility}\n        rScale={rScale}\n        angleSlice={angleSlice}\n        colorScale={colorScale}\n        mobile={mobile}\n        />\n    </g>\n  )\n}\n\nexport default RadarChart;","import \"../styles.css\";\nimport React from \"react\";\n\nconst GradientLegend = ({colorScale, x, y, width, height}) => {\n    return (\n      <g className=\"gradient-legend\">\n        <defs>\n          <linearGradient id=\"linear-gradient\">\n            <stop offset=\"0%\" stopColor={colorScale.range()[0]}></stop>\n            <stop offset=\"100%\" stopColor={colorScale.range()[1]}></stop>\n          </linearGradient>\n        </defs>\n        <text className=\"legend-title\" x={x+width/2} y={y - 5}>time spent at home</text>\n        <rect x={x} y={y} width={width} height={height} fill=\"url(#linear-gradient)\"/>\n        <text x={x} y={y+height*1.8}>{`${colorScale.domain()[0]}%`}</text>\n        <text x={x+width} y={y+height*1.8} textAnchor=\"end\">{`+${colorScale.domain()[1]}%`}</text>\n      </g>\n    )\n  }\n\n  export default GradientLegend","import \"./styles.css\";\nimport React, {useRef, useEffect, useState} from \"react\";\nimport {scaleLinear} from \"d3-scale\";\nimport RadarChart from \"./components/RadarChart\";\nimport GradientLegend from \"./components/GradientLegend\";\n\n// define chart dimensions\nconst initialMobile = window.innerWidth <= 768\n  ? true\n  : false;\n\nconst initialDimensions = {\n  height: 0,\n  width: 0,\n  stateSize: 0,\n  MARGIN: {\n    top: initialMobile\n      ? 80\n      : 100,\n    right: initialMobile\n      ? 20\n      : 50,\n    bottom: initialMobile\n      ? 20\n      : 100,\n    left: initialMobile\n      ? 20\n      : 60\n  }\n};\n\nlet data = {\n  \"retail_recreation_change_diff\": 2.7419354838709675,\n  \"groce_pharm_change_diff\": 3.532258064516129,\n  \"parks_change_diff\": 32.6612903225807,\n  \"transit_change_diff\": -0.03225806451612903,\n  \"workplaces_change_diff\": -15.387096774193548,\n  \"residential_change_diff\": 3.25806451612903\n}\n\nconst gridDomain = Object\n  .keys(data)\n  .slice(0, 5);\n\nconst angleSlice = (Math.PI * 2) / gridDomain.length;\n\nconst UsOverall = ({colorScale}) => {\n  const [dimensions,\n    setDimensions] = useState(initialDimensions);\n  const [mobile,\n    setMobile] = useState(initialMobile);\n\n  const containerRef = useRef(null);\n\n  function updateDimensions() {\n    if (containerRef.current) {\n      setMobile(window.innerWidth <= 768\n        ? true\n        : false)\n      const width = containerRef.current.clientWidth,\n        MARGIN = {\n          top: mobile\n            ? 80\n            : 100,\n          right: mobile\n            ? 20\n            : 50,\n          bottom: mobile\n            ? 20\n            : 100,\n          left: mobile\n            ? 20\n            : 60\n        },\n        stateSize = 0,\n        height = 1.2 * width / 2 + MARGIN.top + MARGIN.bottom;\n      setDimensions({height, width, stateSize, MARGIN});\n    }\n  }\n\n  useEffect(() => {\n    updateDimensions()\n    window.addEventListener(\"resize\", updateDimensions)\n  }, [containerRef]);\n\n  const radius = dimensions.width / 4;\n  const rScale = scaleLinear()\n    .domain([-50, 50])\n    .range([0, radius]);\n\n  return (\n    <section ref={containerRef} id=\"us-overall\" className=\"mobility-chart\">\n      <h3>Back to the office? Not yet!</h3>\n      <svg width={dimensions.width} height={dimensions.height}>\n        <g\n          className=\"chart\"\n          transform={`translate(${dimensions.width / 2}, ${dimensions.height / 2})`}>\n          <GradientLegend\n            colorScale={colorScale}\n            x={- dimensions.width / 8}\n            y={-(radius + dimensions.MARGIN.top) + 25}\n            width={dimensions.width / 4}\n            height={20}/>\n          <RadarChart\n            radius={radius}\n            mobility={gridDomain}\n            rScale={rScale}\n            angleSlice={angleSlice}\n            data={data}\n            stateAbbr=\"us\"\n            colorScale={colorScale}\n            telework={data.percent_telework}/>\n        </g>\n      </svg>\n    </section>\n  )\n}\n\nexport default UsOverall;","const stateData = [\n  {\n    state_full: 'Example',\n    state_postal: 'State',\n    row: -1,\n    column: 5\n  },\n  {\n    state_full: 'Alabama',\n    state_postal: 'AL',\n    row: 5,\n    column: 6\n  },\n  {\n    state_full: 'Alaska',\n    state_postal: 'AK',\n    row: -1,\n    column: 0\n  },\n  {\n    state_full: 'Arizona',\n    state_postal: 'AZ',\n    row: 4,\n    column: 1\n  },\n  {\n    state_full: 'Arkansas',\n    state_postal: 'AR',\n    row: 4,\n    column: 4\n  },\n  {\n    state_full: 'California',\n    state_postal: 'CA',\n    row: 3,\n    column: 0\n  },\n  {\n    state_full: 'Colorado',\n    state_postal: 'CO',\n    row: 3,\n    column: 2\n  },\n  {\n    state_full: 'Connecticut',\n    state_postal: 'CT',\n    row: 2,\n    column: 9\n  },\n  {\n    state_full: 'District of Columbia',\n    state_postal: 'DC',\n    row: 4,\n    column: 8\n  },\n  {\n    state_full: 'Delaware',\n    state_postal: 'DE',\n    row: 3,\n    column: 9\n  },\n  {\n    state_full: 'Florida',\n    state_postal: 'FL',\n    row: 6,\n    column: 8\n  },\n  {\n    state_full: 'Georgia',\n    state_postal: 'GA',\n    row: 5,\n    column: 7\n  },\n  {\n    state_full: 'Hawaii',\n    state_postal: 'HI',\n    row: 6,\n    column: 0\n  },\n  {\n    state_full: 'Idaho',\n    state_postal: 'ID',\n    row: 1,\n    column: 1\n  },\n  {\n    state_full: 'Illinois',\n    state_postal: 'IL',\n    row: 1,\n    column: 6\n  },\n  {\n    state_full: 'Indiana',\n    state_postal: 'IN',\n    row: 2,\n    column: 5\n  },\n  {\n    state_full: 'Iowa',\n    state_postal: 'IA',\n    row: 2,\n    column: 4\n  },\n  {\n    state_full: 'Kansas',\n    state_postal: 'KS',\n    row: 4,\n    column: 3\n  },\n  {\n    state_full: 'Kentucky',\n    state_postal: 'KY',\n    row: 3,\n    column: 5\n  },\n  {\n    state_full: 'Louisiana',\n    state_postal: 'LA',\n    row: 5,\n    column: 4\n  },\n  {\n    state_full: 'Maine',\n    state_postal: 'ME',\n    row: -1,\n    column: 10\n  },\n  {\n    state_full: 'Maryland',\n    state_postal: 'MD',\n    row: 3,\n    column: 8\n  },\n  {\n    state_full: 'Massachusetts',\n    state_postal: 'MA',\n    row: 1,\n    column: 9\n  },\n  {\n    state_full: 'Michigan',\n    state_postal: 'MI',\n    row: 1,\n    column: 7\n  },\n  {\n    state_full: 'Minnesota',\n    state_postal: 'MN',\n    row: 1,\n    column: 4\n  },\n  {\n    state_full: 'Mississippi',\n    state_postal: 'MS',\n    row: 5,\n    column: 5\n  },\n  {\n    state_full: 'Missouri',\n    state_postal: 'MO',\n    row: 3,\n    column: 4\n  },\n  {\n    state_full: 'Montana',\n    state_postal: 'MT',\n    row: 1,\n    column: 2\n  },\n  {\n    state_full: 'Nebraska',\n    state_postal: 'NE',\n    row: 3,\n    column: 3\n  },\n  {\n    state_full: 'Nevada',\n    state_postal: 'NV',\n    row: 2,\n    column: 1\n  },\n  {\n    state_full: 'New Hampshire',\n    state_postal: 'NH',\n    row: 0,\n    column: 10\n  },\n  {\n    state_full: 'New Jersey',\n    state_postal: 'NJ',\n    row: 2,\n    column: 8\n  },\n  {\n    state_full: 'New Mexico',\n    state_postal: 'NM',\n    row: 4,\n    column: 2\n  },\n  {\n    state_full: 'New York',\n    state_postal: 'NY',\n    row: 1,\n    column: 8\n  },\n  {\n    state_full: 'North Carolina',\n    state_postal: 'NC',\n    row: 4,\n    column: 6\n  },\n  {\n    state_full: 'North Dakota',\n    state_postal: 'ND',\n    row: 1,\n    column: 3\n  },\n  {\n    state_full: 'Ohio',\n    state_postal: 'OH',\n    row: 2,\n    column: 6\n  },\n  {\n    state_full: 'Oklahoma',\n    state_postal: 'OK',\n    row: 5,\n    column: 3\n  },\n  {\n    state_full: 'Oregon',\n    state_postal: 'OR',\n    row: 2,\n    column: 0\n  },\n  {\n    state_full: 'Pennsylvania',\n    state_postal: 'PA',\n    row: 2,\n    column: 7\n  },\n  {\n    state_full: 'Rhode Island',\n    state_postal: 'RI',\n    row: 2,\n    column: 10\n  },\n  {\n    state_full: 'South Carolina',\n    state_postal: 'SC',\n    row: 4,\n    column: 7\n  },\n  {\n    state_full: 'South Dakota',\n    state_postal: 'SD',\n    row: 2,\n    column: 3\n  },\n  {\n    state_full: 'Tennessee',\n    state_postal: 'TN',\n    row: 4,\n    column: 5\n  },\n  {\n    state_full: 'Texas',\n    state_postal: 'TX',\n    row: 6,\n    column: 3\n  },\n  {\n    state_full: 'Utah',\n    state_postal: 'UT',\n    row: 3,\n    column: 1\n  },\n  {\n    state_full: 'Vermont',\n    state_postal: 'VT',\n    row: 0,\n    column: 9\n  },\n  {\n    state_full: 'Virginia',\n    state_postal: 'VA',\n    row: 3,\n    column: 7\n  },\n  {\n    state_full: 'Washington',\n    state_postal: 'WA',\n    row: 1,\n    column: 0\n  },\n  {\n    state_full: 'West Virginia',\n    state_postal: 'WV',\n    row: 3,\n    column: 6\n  },\n  {\n    state_full: 'Wisconsin',\n    state_postal: 'WI',\n    row: 1,\n    column: 5\n  },\n  {\n    state_full: 'Wyoming',\n    state_postal: 'WY',\n    row: 2,\n    column: 2\n  }\n]\nexport default stateData;\n","import { useState, useEffect } from \"react\";\nimport { csv } from \"d3\";\nimport stateData from \"./stateData.js\";\n\nconst readData = (url) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    csv(url).then(rawData => {\n      rawData.forEach((d) => {\n        stateData.forEach((s) => {\n          if (d.state == s.state_full) {\n            d.row = +s.row;\n            d.column = s.column;\n            d.groce_pharm_change_diff = +d.groce_pharm_change_diff;\n            d.retail_recreation_change_diff = +d.retail_recreation_change_diff;\n            d.transit_change_diff = +d.transit_change_diff;\n            d.workplaces_change_diff = +d.workplaces_change_diff;\n            d.parks_change_diff = +d.parks_change_diff;\n            d.residential_change_diff = +d.residential_change_diff;\n            d.percent_telework = +d.percent_telework;\n            // d.avg_aggr_mobility = (d.groce_pharm_change_diff+\n            //   d.retail_recreation_change_diff+\n            //   d.transit_change_diff+\n            //   d.workplaces_change_diff)/4\n          } \n        });\n      });\n      // drop duplicates\n      setData([...new Map(rawData.map(obj => [JSON.stringify(obj), obj])).values()])\n    });\n  }, []);\n  return data;\n};\n\nexport default readData;\n","import React from \"react\";\nimport {scaleLinear} from \"d3\";\nimport readData from \"../data/readData.js\";\nimport RadarChart from \"./RadarChart\";\n\n\n// mobility data url\nconst csvUrl = \"https://gist.githubusercontent.com/sabrinamochi/6b1a8d203618ed230c7254bf8c53dfd2\" +\n    \"/raw/cd80388fa3b33d48a8e324331bbcb83531c883c8/clean-avg-mobility-data.csv\";\nlet gridDomain = [];\n\nconst Map = ({ onChangeTooltipValue, stateSize, colorScale, mobile}) => {\n  // load data\n  const data = readData(csvUrl);\n  if (!data) {\n    return <pre>Loading...</pre>;\n  } else {\n    // update radar grid domain\n    const mobility = Object\n      .keys(data[0])\n      .slice(2, 7);\n    gridDomain = [...new Set(mobility)];\n    // // del park gridDomain.splice(2, 1)\n  }\n\n  // define padding\n  const statePaddingX = mobile ? 3 : 5;\n  const statePaddingY = mobile ? 12 : 5;\n\n  // function to calculate state location\n  const y_row = ({row}) => row * (stateSize + statePaddingY);\n  const x_column = ({column}) => column * (stateSize + statePaddingX);\n\n  const angleSlice = (Math.PI * 2) / gridDomain.length;\n\n  const radius = stateSize / 2;\n  const rScale = scaleLinear()\n    .domain([-50, 50])\n    .range([0, radius]);\n\n  const lowerMobilityStates = [\n    \"MA\",\n    \"VT\",\n    \"MD\",\n    \"NJ\",\n    \"HI\",\n    \"DC\",\n    \"RI\",\n    \"CT\"\n  ];\n  const handleMouseOver = (selData) => {\n    const circlePosition = { \n      circleX: x_column(selData) + stateSize * 2 + 10, \n      circleY: y_row(selData) + stateSize / 2\n    } \n    const updatedData = {\n    ...selData,   ...circlePosition }\n    onChangeTooltipValue(updatedData, true)\n  }\n\n  const handleMouseOut = () => {\n    onChangeTooltipValue({value: \"\"}, false)\n  }\n\n  return data.map((d, i) => {\n    const assignedClassName = [\"radar\"];\n    if (d.Region == \"Northeast\" || d.Region == \"West\") {\n      assignedClassName.push(\"ne-w\");\n    } else if (d.Region == \"Midwest\" || d.Region == \"South\") {\n      assignedClassName.push(\"mw-s\");\n    }\n    if (lowerMobilityStates.includes(d[\"State Code\"])) {\n      assignedClassName.push(\"low-overall-mobility\")\n    }\n    return (\n      <g\n        onMouseOver={() => handleMouseOver(d)}\n        onMouseOut={handleMouseOut}\n        className={assignedClassName.join(\" \")}\n        key={`${d.state}-${i}`}\n        transform={`translate(${x_column(d) + stateSize / 2}, ${y_row(d) + stateSize / 2})`}>\n        <RadarChart\n          data={d}\n          stateAbbr={d[\"State Code\"]}\n          region={d.Region}\n          mobility={gridDomain}\n          radius={radius}\n          rScale={rScale}\n          angleSlice={angleSlice}\n          colorScale={colorScale}\n          mobile={mobile}/>\n      </g>\n    )\n  });\n};\n\nexport default Map;\n","import \"../styles.css\";\nimport React from \"react\";\n\nconst TeleworkLegend = ({ width, transform, mobile }) => {\n    return (\n      <g \n        className=\"telework-legend\"\n        transform={transform}>\n        <text \n          className=\"legend-title\"\n          transform={`translate(${width/2}, ${-15})`}\n        >\n            <tspan>more ppl.</tspan>\n            <tspan y={10} x={0}>teleworking</tspan>\n        </text>\n        <line \n          x1={0}\n          x2={width}\n          strokeDasharray={mobile ? null : \"25 1.5\"}/>\n      </g>\n    )\n  }\n\n  export default TeleworkLegend;","import \"../styles.css\";\nimport { select, selectAll } from \"d3\";\n\nconst ScrollingSteps = {\n    \"park\": (direction) => {\n      selectAll(\".radar\").style(\"opacity\", 1)\n    },\n    \"explain\": (direction) => {\n      if (direction == \"down\") {\n        selectAll(\".radar\").style(\"opacity\", 0.45)\n        selectAll(\".low-overall-mobility\").style(\"opacity\", 1)\n      } else {\n        selectAll(\".radar\").style(\"opacity\", 1)\n      }\n    },\n    \"ne-w\": (direction) => {\n      if (direction == \"down\") {\n        selectAll(\".radar\").style(\"opacity\", 0.45)\n        selectAll(\".ne-w\").style(\"opacity\", 1)\n      } else {\n        selectAll(\".radar\").style(\"opacity\", 0.45)\n        selectAll(\".low-overall-mobility\").style(\"opacity\", 1)\n      }\n    },\n    \"mw-s\": (direction) => {\n      if (direction == \"down\") {\n        selectAll(\".radar\").style(\"opacity\", 0.45)\n        selectAll(\".mw-s\").style(\"opacity\", 1)\n      } else {\n        selectAll(\".radar\").style(\"opacity\", 0.45)\n        selectAll(\".ne-w\").style(\"opacity\", 1)\n      }\n    },\n    \"telework\": (direction) => {\n      if (direction == \"down\") {\n        selectAll(\".radar\").style(\"opacity\", 1)\n        select(\".telework-legend\").style(\"opacity\", 1)\n        selectAll(\".telework\").classed(\"selected-grid\", true)\n      } else {\n        select(\".telework-legend\").style(\"opacity\", 0)\n        selectAll(\".telework\").classed(\"selected-grid\", false)\n        selectAll(\".radar\").style(\"opacity\", 0.45)\n        selectAll(\".mw-s\").style(\"opacity\", 1)\n      }\n    },\n    \"explore\": (direction) => {\n      return;\n    },\n    \"invisible\": (direction) => {\n      if (direction == \"down\") {\n        selectAll(\".mobility-chart\").style(\"z-index\", 1)\n      } else {\n        selectAll(\".mobility-chart\").style(\"z-index\", -1)\n      }\n    }\n  }\n\n  export default ScrollingSteps;","import \"./styles.css\";\nimport React, {useRef, useEffect, useState} from \"react\";\nimport scrollama from \"scrollama\";\nimport Stickyfill from 'stickyfilljs';\nimport {selectAll, select} from \"d3\";\nimport Map from \"./components/Map\";\nimport GradientLegend from \"./components/GradientLegend\";\nimport TeleworkLegend from \"./components/TeleworkLegend\";\nimport ScrollingSteps from \"./components/ScrollingSteps\";\n\n// define chart dimensions\nconst initialMobile = window.innerWidth <= 768\n  ? true\n  : false;\n\nconst initialDimensions = {\n  height: 0,\n  width: 0,\n  stateSize: 0,\n  MARGIN: {\n    top: initialMobile\n      ? 80\n      : 100,\n    right: initialMobile\n      ? 20\n      : 50,\n    bottom: initialMobile\n      ? 20\n      : 100,\n    left: initialMobile\n      ? 20\n      : 60\n  }\n};\n\n// set up tooltip\nconst initialTooltipValue = {\n  value: \"\"\n}\n\n// initiate scroller\nconst scroller = scrollama();\n\nconst UsByState = ({colorScale}) => {\n  const [dimensions,\n    setDimensions] = useState(initialDimensions);\n  const [mobile,\n    setMobile] = useState(initialMobile);\n  const [tooltipValue,\n    setTooltip] = useState(initialTooltipValue);\n  const [hovered,\n    setHovered] = useState(false);\n\n  // update dimensions and provide nodes to scroller after chart and scrolling\n  // texts containers are rendered\n  const chartContainerRef = useRef(null);\n  const textsContainerRef = useRef(null);\n  function updateDimensions() {\n    if (chartContainerRef.current) {\n      setMobile(window.innerWidth <= 768\n        ? true\n        : false)\n      const width = chartContainerRef.current.clientWidth,\n        MARGIN = {\n          top: mobile\n            ? 80\n            : 100,\n          right: mobile\n            ? 20\n            : 50,\n          bottom: mobile\n            ? 20\n            : 100,\n          left: mobile\n            ? 20\n            : 60\n        },\n        stateSize = (width - MARGIN.left - MARGIN.right) / 12,\n        height = mobile\n          ? stateSize * 11 + MARGIN.top + MARGIN.bottom\n          : stateSize * 9 + MARGIN.top + MARGIN.bottom;\n      setDimensions({height, width, stateSize, MARGIN});\n\n    }\n  }\n  useEffect(() => {\n    updateDimensions()\n    window.addEventListener(\"resize\", updateDimensions)\n  }, [chartContainerRef, textsContainerRef]);\n\n  // console.log(mobile) Scrollytelling\n  function handleStepEnter({index, element, direction}) {\n    currentStep = select(element).attr('data-step')\n    ScrollingSteps[currentStep](direction);\n  }\n\n  function setupScroller() {\n    if (chartContainerRef.current) {\n      const $graphic = select(\".mobility-chart\")\n      Stickyfill.add($graphic.node());\n    }\n    if (textsContainerRef.current) {\n      const $step = selectAll(\".scrolling-text\")\n      scroller.setup({\n        step: $step.nodes(),\n        offset: 0.8\n      }).onStepEnter(handleStepEnter)\n    }\n  }\n  let currentStep = '';\n  setupScroller()\n\n  // update tooltip value if user hovers on radar\n  const onChangeTooltipHandler = (t, h) => {\n    setTooltip(t);\n    setHovered(h)\n    // console.log(tooltipValue)\n  };\n\n  return (\n    <section id=\"scrolling-map\">\n      <div ref={chartContainerRef} className=\"mobility-chart\">\n        <h3>Mobility Patterns by State</h3>\n        <div style={{\n          position: \"relative\"\n        }}>\n          <svg width={dimensions.width} height={dimensions.height}>\n            <g\n              className=\"chart\"\n              transform={`translate(${dimensions.MARGIN.left}, ${dimensions.MARGIN.top})`}>\n              <GradientLegend \n                colorScale={colorScale}\n                x={dimensions.width / 2 - dimensions.MARGIN.left - dimensions.width / 8}\n                y={- dimensions.MARGIN.top / 2}\n                width={dimensions.width / 4}\n                height={20}/>\n              <TeleworkLegend \n                transform={`translate(${30 + dimensions.width / 2 - dimensions.MARGIN.left + dimensions.width / 8 }, ${10 - dimensions.MARGIN.top / 2})`}\n                width={mobile ? 30 : 60}\n                mobile={mobile}/>\n              <Map\n                onChangeTooltipValue={onChangeTooltipHandler}\n                stateSize={dimensions.stateSize}\n                colorScale={colorScale}\n                mobile={mobile}/>\n            </g>\n          </svg>\n          <div\n            className=\"tooltip\"\n            style={{\n            left: mobile\n              ? 0\n              : `${tooltipValue.circleX}px`,\n            top: mobile\n              ? 0\n              : `${tooltipValue.circleY}px`,\n            opacity: hovered\n              ? 1\n              : 0\n          }}>\n            <h5>{tooltipValue.state}</h5>\n            <div>\n              <p>retail<br></br>recreation</p>\n              <p>{`${Math.round(10 * tooltipValue.retail_recreation_change_diff) / 10}%`}</p>\n            </div>\n            <div>\n              <p>grocery<br></br>pharmacy</p>\n              <p>{`${Math.round(10 * tooltipValue.retail_recreation_change_diff) / 10}%`}</p>\n            </div>\n            <div>\n              <p>transit<br></br>stations</p>\n              <p>{`${Math.round(10 * tooltipValue.retail_recreation_change_diff) / 10}%`}</p>\n            </div>\n            <div>\n              <p>work<br></br>places</p>\n              <p>{`${Math.round(10 * tooltipValue.retail_recreation_change_diff) / 10}%`}</p>\n            </div>\n            <div>\n              <p>parks</p>\n              <p>{`${Math.round(10 * tooltipValue.retail_recreation_change_diff) / 10}%`}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div ref={textsContainerRef} className=\"scrolling-texts-container\">\n        <div className=\"scrolling-text\" data-step=\"park\">\n          <p>Visits to parks are way above the baseline in almost all states except for\n            D.C. and Hawaii.</p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"explain\">\n          <p>Most areas in the eastern U.S. see people spending more time at home, with\n            D.C. having the most significant increase, more than 10% above the baseline.</p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"ne-w\">\n          <p>In nearly half of the states in northeast and west regions, where many\n            office-based employees remain at home, mobility trends in indoor places, such as\n            shops and train stations, are still below baseline levels.</p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"mw-s\">\n          <p>About two-thirds of the states in the midwest and south regions see\n            commercial activities heating up. Visits to supermarkets, cafes and transit\n            stations reach the baseline. The duration of people staying at home is almost\n            the same as what it was before the pandemic.\n          </p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"telework\">\n          <p>The percentage of people working remotely highly correlates with the changes\n            in mobility patterns. States with more people reporting being able to telework\n            also spend more time at home.\n          </p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"explore\">\n          <p>Hover over each state to see the detailed mobility trends.</p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"invisible\">\n          <p></p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default UsByState\n","import \"./styles.css\";\nimport React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { scaleLinear } from \"d3-scale\";\nimport UsOverall from \"./UsOverall\";\nimport UsByState from \"./UsByState\";\n\nconst colorScale = scaleLinear()\n    .domain([0,10])\n    .range([\"#ee694b\", \"#38bfcd\"]);\n\nconst App = () => {\n  return (\n    <main>\n      <section className=\"content\">\n        <h1>Where People Are Moving Again</h1>\n        <div>\n          <p>City streets are getting crowded. Travel plans are ramping up. Restaurants are allowing people to dine in again.</p>\n          <p>After vaccine rollout began last December and restrictions on social distancing have eased, the U.S. is on track to return to normalcy.</p>\n          <p>Google <a href=\"https://www.google.com/covid19/mobility/\">COVID-19 Community Mobility Reports</a> show how visits and length of stay in different locations have changed compared to a baseline period before the pandemic.</p>\n        </div>\n      </section>\n      <UsOverall colorScale={colorScale}/>\n      <section className=\"content\">\n        <div>\n          <p>Overall in the U.S., movement of people to shopping centers, grocery stores and train stations is almost the same as what it was during the pre-pandemic days - average mobility trends seen in January and February 2020.</p>\n          <p>However, visits to workplaces are still down by 20% as compared to the baseline.</p>\n          <p>A further inspection of the state-level data reveals that while visits to workplaces remain below the baseline in all states, mobility trends in other locations vary across the country.</p>\n        </div>\n      </section>\n      <UsByState colorScale={colorScale}/>\n    </main>\n  )\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}