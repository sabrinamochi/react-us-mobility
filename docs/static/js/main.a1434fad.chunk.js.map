{"version":3,"sources":["components/GridCircle.js","components/GridLine.js","components/GridLegend.js","components/Grid.js","components/RadarPath.js","components/RadarCircle.js","components/Radar.js","components/RadarChart.js","components/GradientLegend.js","UsOverall.js","data/stateData.js","data/readData.js","components/Map.js","components/ScrollingSteps.js","UsByState.js","index.js"],"names":["GridCircle","gridCircleData","stateAbbr","radius","telework","map","n","assignedClassName","id","className","r","length","fill","stroke","fillOpacity","strokeWidth","labelTexts","textAnchorOptions","GridLine","mobility","rScale","angleSlice","m","i","x1","y1","x2","range","Math","cos","PI","y2","sin","textAnchor","y","t","idx","x","dy","GridLegend","axisCircleNum","reverse","Grid","region","RadarPath","data","colorScale","colorColumn","radarLine","lineRadial","curve","curveCardinalClosed","d","value","domain","angle","values","RadarCircle","dotRadius","mobile","circleTooltipRef","useRef","handleMouseOut","current","select","attr","modifiedRScale","posXCal","posYCal","onMouseOver","cx","cy","leftCircle","type","includes","text","round","handleMouseOver","onMouseOut","ref","Radar","radarData","state","state_abbr","Region","percent_telework","residential","residential_change_diff","forEach","push","RadarChart","transform","GradientLegend","width","height","forMap","offset","stopColor","initialMobile","window","innerWidth","initialDimensions","stateSize","MARGIN","top","right","bottom","left","UsOverall","residentialColorScale","residentialColorColumn","useState","dimensions","setDimensions","setMobile","containerRef","updateDimensions","useCallback","clientWidth","useEffect","addEventListener","scaleLinear","stateData","state_full","state_postal","row","column","readData","url","setData","csv","then","rawData","s","groce_pharm_change_diff","retail_recreation_change_diff","transit_change_diff","workplaces_change_diff","parks_change_diff","Map","obj","JSON","stringify","onChangeTooltipValue","statePaddingX","statePaddingY","y_row","x_column","selNeStates","selWStates","selMwAndSStates","selData","circlePosition","circleX","circleY","updatedData","join","ScrollingSteps","direction","selectAll","classed","style","initialTooltipValue","scroller","scrollama","UsByState","currentStep","scrollingTextWidth","setScrollingTextWidth","tooltipValue","setTooltip","hovered","setHovered","setColorScale","setColorColumn","teleworkColorScale","chartContainerRef","textsContainerRef","scrollingTextRef","handleStepEnter","index","element","setupScroller","$graphic","Stickyfill","add","node","$step","setup","step","nodes","onStepEnter","querySelector","onChangeTooltipHandler","h","switchColorScale","position","mobileScreenTopExampleRadarR","onClick","href","opacity","data-step","scrollyExampleRadarR","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a1434fad.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GridCircle = ({gridCircleData, stateAbbr, radius, telework}) => {\n  return gridCircleData.map((n) => {\n    let assignedClassName;\n    if ((n === 2) && (telework >= 30)){\n      assignedClassName = \"telework\"\n    } else if (n === 1) {\n      assignedClassName = \"grid-baseline\"\n    } \n    return (\n      <g key={`${stateAbbr}-${n}`}>\n        <circle \n          id={n === 2 // only give id to the biggest circle grid\n          ? `${stateAbbr}-grid`\n          : null}\n          className={assignedClassName}\n          r={(radius / (gridCircleData.length - 1)) * n}\n          fill={n === 2 // only give fill color to the biggest circle grid\n          ? \"#e8e8e8\"\n          : \"none\"}\n          stroke=\"#fff\"\n          fillOpacity={0.5}\n          strokeWidth={stateAbbr === \"us\" // if its overall us radar chart, give thicker stroke\n          ? 4\n          : 2}/>\n      </g>\n    )\n  });\n};\n\nexport default GridCircle;\n","import React from \"react\";\n\nconst labelTexts = [[\"Retail\",\"Recreation\"], \n  [\"Grocery\",\"Pharmacy\"],\n  [\"Parks\"],\n  [\"Transit\", \"Stations\"],\n  [\"Work\",\"Places\"]]\n\nconst textAnchorOptions = [\"middle\", \"start\", \"start\", \"end\", \"end\"]\n\nconst GridLine = ({ stateAbbr, mobility, rScale, angleSlice  }) => {\n\n   return mobility.map((m,i) => (\n      <g key={`${stateAbbr}-${m}`}>\n        <line\n          x1={0}\n          y1={0}\n          x2={rScale.range()[1] * 1.1 * Math.cos(angleSlice * i - Math.PI / 2)}\n          y2={rScale.range()[1] * 1.1 * Math.sin(angleSlice * i - Math.PI / 2)}\n          stroke=\"#fff\"\n          strokeWidth={stateAbbr === \"us\" ? 4 : 2} // give overall us radar thicker stroke\n        />\n        {stateAbbr === \"AK\"  // if its alaska, give mobility labels\n          ? <text className=\"legend ak-legend\" textAnchor={textAnchorOptions[i]} y={rScale.range()[1] * 1.5 * Math.sin(angleSlice * i - Math.PI / 2)}>{labelTexts[i].map((t,idx) => <tspan key={idx} x={rScale.range()[1] * 1.2 * Math.cos(angleSlice * i - Math.PI / 2)} dy={idx*11}>{t}</tspan>)}</text>\n          : null\n        }\n        {stateAbbr === \"us\" // if its overall us, give mobility labels\n          ? <text \n            className=\"legend\" \n            textAnchor={textAnchorOptions[i]} \n            y={rScale.range()[1] * 1.13 * Math.sin(angleSlice * i - Math.PI / 2)}>\n              {\n              labelTexts[i].map((t,idx) => <tspan key={idx} x={rScale.range()[1] * 1.1 * Math.cos(angleSlice * i - Math.PI / 2)} dy={idx*12}>{t}</tspan>)\n              }\n            </text>\n          : null\n        }\n        {stateAbbr === \"example\" | stateAbbr === \"top-example\" // if its example radar, give mobility labels\n          ? <text className=\"legend\" textAnchor={textAnchorOptions[i]} y={rScale.range()[1] * 1.3 * Math.sin(angleSlice * i - Math.PI / 2)}>{labelTexts[i].map((t,idx) => <tspan key={idx} x={rScale.range()[1] * 1.1 * Math.cos(angleSlice * i - Math.PI / 2)} dy={idx*11}>{t}</tspan>)}</text>\n          : null\n        }\n \n        \n      </g>\n    ))\n}\n\nexport default GridLine;","import React from \"react\";\n\nconst GridLegend = ({stateAbbr, gridCircleData, radius}) => {\n  return gridCircleData.map((n) => (\n    <g key={`${stateAbbr}-${n}`}>\n      {stateAbbr === \"us\" | stateAbbr === \"example\" // if its overall us radar or example radar, give percent legend\n        ? <text\n            className=\"legend\"\n            y={-(radius / (gridCircleData.length-1)) * n}\n            dy= {n === 2 ? \"1em\" : \"0.8em\"}>\n              {n === 2 && \n                `≥+${100*(n-1)/2}%`\n              }\n              {n === 1 &&\n               `0%`\n              }\n              {n === 0 && \n                `≤${100*(n-1)/2}%`\n              }\n          </text>\n        : null \n      }\n    </g>\n  ));\n};\n\nexport default GridLegend;\n","import React from \"react\";\nimport { range } from \"d3-array\";\nimport GridCircle from \"./GridCircle\";\nimport GridLine from \"./GridLine\";\nimport GridLegend from \"./GridLegend\";\n\n// create data for grid circles\n// each radar has two grid circles\nconst axisCircleNum = 2;\nconst gridCircleData = range(0, axisCircleNum + 1).reverse();\n\nconst Grid = ({\n  stateAbbr,\n  region,\n  mobility,\n  radius,\n  rScale,\n  angleSlice,\n  telework\n}) => {\n  return (\n    <g>\n      <GridCircle \n        gridCircleData={gridCircleData} \n        stateAbbr={stateAbbr}\n        region={region}\n        radius={radius} \n        telework={telework}/>\n      <GridLine\n        stateAbbr={stateAbbr}\n        mobility={mobility}\n        rScale={rScale}\n        angleSlice={angleSlice}\n      />\n      <GridLegend\n        gridCircleData={gridCircleData} \n        stateAbbr={stateAbbr} \n        radius={radius}\n        />\n    </g>\n  );\n};\n\nexport default Grid;\n","import React from \"react\";\nimport { lineRadial, curveCardinalClosed } from \"d3-shape\";\n\nconst RadarPath = ({ data, stateAbbr, rScale, angleSlice, colorScale, colorColumn }) => {\n  // radial line generator, thanks to d3 woo hoo! \n  const radarLine = lineRadial()\n    .curve(curveCardinalClosed)\n    .radius((d) => {\n      // if it's over 50% or below -50%, don't go beyond the chart\n      if (d.value >= rScale.domain()[1]) {\n        return rScale.range()[1];\n      } else if (d.value <= rScale.domain()[0]) {\n        return rScale.range()[0];\n      } else {\n        return rScale(d.value);\n      }\n    })\n    .angle((d, i) => i * angleSlice);\n  return (\n      <path\n        className=\"radar-path\"\n        d={radarLine(data.values)}\n        fill={colorScale(data[colorColumn])}\n        stroke={colorScale(data[colorColumn])}\n        fillOpacity={.3}\n        strokeWidth={stateAbbr === \"us\" ? 3 : 1.5}\n      />\n    \n  );\n};\n\nexport default RadarPath;\n","import React, {useRef} from \"react\";\nimport {select} from \"d3\";\n\n\nconst RadarCircle = ({ data, stateAbbr, rScale, angleSlice, colorScale, colorColumn, mobile }) => {\n  const dotRadius = stateAbbr === \"us\" ? 5 : 3;\n  const circleTooltipRef = useRef(null);\n\n  const handleMouseOver = (d, cx, cy) => {\n    if(circleTooltipRef.current){\n      const leftCircle = (d.type.includes(\"transit\")|d.type.includes(\"work\")) ? true : false;\n        select(circleTooltipRef.current)\n        .attr(\"opacity\", 1)\n        .attr(\"text-anchor\", leftCircle ? \"end\" : \"start\")\n        .attr(\"x\", leftCircle ? cx-10 : cx+10)\n        .attr(\"y\", cy)\n        .text(d.value > 0 ? `+${Math.round(100*d.value)/100}%` : `${Math.round(100*d.value)/100}%`)\n    }\n  }\n  const handleMouseOut = () => {\n    if(circleTooltipRef.current){\n        select(circleTooltipRef.current)\n        .attr(\"opacity\", 0)\n    }\n  }\n\n  return data.values.map((d, i) => {\n    const posXCal = Math.cos(angleSlice * i - Math.PI / 2);\n    const posYCal = Math.sin(angleSlice * i - Math.PI / 2);\n\n    // if it's over 50% or below -50%, don't go beyond the chart\n    let modifiedRScale;\n    if (d.value >= rScale.domain()[1]) {\n      modifiedRScale = rScale.range()[1];\n    } else if (d.value <= rScale.domain()[0]) {\n      modifiedRScale = rScale.range()[0];\n    } else {\n      modifiedRScale = rScale(d.value);\n    }\n\n    return (\n      <g key={`${d}+${i}`}>\n        <circle\n          onMouseOver={stateAbbr === \"us\" ? () => handleMouseOver(d, modifiedRScale * posXCal, modifiedRScale * posYCal) : null}\n          onMouseOut={handleMouseOut}\n          className={`radar-circle radar-circle-${d.type}`}\n          cx={modifiedRScale * posXCal}\n          cy={modifiedRScale * posYCal}\n          r={dotRadius}\n          fill={colorScale(data[colorColumn])}\n        />\n        {stateAbbr === \"us\" && \n            <text ref={circleTooltipRef} className=\"radar-circle-legend\"></text>\n        }\n      </g>\n\n    );\n  });\n};\n\nexport default RadarCircle;\n","import React from \"react\";\nimport RadarPath from \"./RadarPath\";\nimport RadarCircle from \"./RadarCircle\";\n\nconst Radar = ({\n  data,\n  stateAbbr,\n  mobility,\n  rScale,\n  angleSlice,\n  colorScale,\n  colorColumn,\n  mobile\n}) => {\n  // prepare data for radar chart\n  const radarData = {\n    state: data.state,\n    state_abbr: data[\"State Code\"],\n    region: data.Region,\n    percent_telework: data.percent_telework,\n    residential: data.residential_change_diff,\n    values: []\n  };\n  mobility.forEach((m, i) => {\n    radarData.values.push({\n      type: m,\n      value: data[m]\n    });\n  });\n  \n  return (\n    <g>\n      <RadarPath\n        data={radarData}\n        stateAbbr={stateAbbr}\n        rScale={rScale}\n        angleSlice={angleSlice}\n        colorScale={colorScale}\n        colorColumn={colorColumn}\n      />\n      <RadarCircle\n        data={radarData}\n        stateAbbr={stateAbbr}\n        rScale={rScale}\n        angleSlice={angleSlice}\n        colorScale={colorScale}\n        colorColumn={colorColumn}\n        mobile={mobile}\n      />\n      { stateAbbr !== \"us\" // if its us radar chart, don't put state label in the middle \n        ? <text \n            dy={mobile && stateAbbr !== \"AK\" ? -rScale.range()[1] : 0}\n            className=\"state-abbr\">\n            {stateAbbr}\n          </text>\n        : null\n      }\n    </g>\n  );\n};\n\nexport default Radar;\n","import React from \"react\";\nimport Grid from \"./Grid\";\nimport Radar from \"./Radar\";\n\nconst RadarChart = ({\n  data,\n  stateAbbr,\n  region,\n  mobility,\n  radius,\n  rScale,\n  angleSlice,\n  colorScale,\n  colorColumn,\n  mobile\n}) => {\n\n  return (\n    <g transform={stateAbbr===\"us\" ? `translate(0, ${25})` : `translate(0)`}>\n      <Grid\n        stateAbbr={stateAbbr}\n        region={region}\n        mobility={mobility}\n        radius={radius}\n        rScale={rScale}\n        angleSlice={angleSlice}\n        telework={data.percent_telework}/>\n      <Radar\n        data={data}\n        stateAbbr={stateAbbr}\n        mobility={mobility}\n        rScale={rScale}\n        angleSlice={angleSlice}\n        colorScale={colorScale}\n        colorColumn={colorColumn}\n        mobile={mobile}\n        />\n    </g>\n  )\n}\n\nexport default RadarChart;","import \"../styles.css\";\nimport React from \"react\";\n\nconst GradientLegend = ({colorScale, colorColumn, x, y, width, height, forMap}) => {\n    if (!forMap) {colorColumn = \"residential\";}\n    return (\n      <g className=\"gradient-legend\">\n        <defs>\n          <linearGradient id={`${colorColumn}-linear-gradient`}>\n            <stop offset=\"0%\" stopColor={colorScale.range()[0]}></stop>\n            <stop offset=\"100%\" stopColor={colorScale.range()[1]}></stop>\n          </linearGradient>\n        </defs>\n        <text className=\"legend-title\" x={x+width/2} y={y - 5}>\n          {forMap ? null : \"Time Spent At Home\"}\n        </text>\n        <rect x={x} y={y} width={width} height={height} fill={`url(#${colorColumn}-linear-gradient)`}/>\n        <text x={x} y={y+height*1.8}>{`${colorScale.domain()[0]}%`}</text>\n        <text x={x+width} y={y+height*1.8} textAnchor=\"end\">{colorColumn === \"residential\" ? `≥+${colorScale.domain()[1]}%` : `≥${colorScale.domain()[1]}%`}</text>\n      </g>\n    )\n  }\n\n  export default GradientLegend","import \"./styles.css\";\nimport React, {useRef, useEffect, useState, useCallback} from \"react\";\nimport {scaleLinear} from \"d3-scale\";\nimport RadarChart from \"./components/RadarChart\";\nimport GradientLegend from \"./components/GradientLegend\";\n\n// define chart dimensions\nconst initialMobile = window.innerWidth <= 768\n  ? true\n  : false;\n\nconst initialDimensions = {\n  height: 0,\n  width: 0,\n  stateSize: 0,\n  MARGIN: {\n    top: 100,\n    right: initialMobile\n      ? 20\n      : 50,\n    bottom: initialMobile\n      ? 20\n      : 10,\n    left: initialMobile\n      ? 20\n      : 60\n  }\n};\n\n// US average data\nlet data = {\n  \"retail_recreation_change_diff\": 2.7419354838709675,\n  \"groce_pharm_change_diff\": 3.532258064516129,\n  \"parks_change_diff\": 32.6612903225807,\n  \"transit_change_diff\": -0.03225806451612903,\n  \"workplaces_change_diff\": -15.387096774193548,\n  \"residential_change_diff\": 3.25806451612903\n}\n\nconst UsOverall = ({residentialColorScale, mobility, residentialColorColumn}) => {\n  const angleSlice = (Math.PI * 2) / mobility.length;\n\n  const [dimensions,\n    setDimensions] = useState(initialDimensions);\n  const [mobile,\n    setMobile] = useState(initialMobile);\n\n  const containerRef = useRef(null);\n\n  const updateDimensions = useCallback(() => {\n    if (containerRef.current) {\n      setMobile(window.innerWidth <= 768\n        ? true\n        : false)\n      const width = containerRef.current.clientWidth,\n        MARGIN = {\n          top: 100,\n          right: mobile\n            ? 20\n            : 50,\n          bottom: mobile\n            ? 20\n            : 0,\n          left: mobile\n            ? 20\n            : 60\n        },\n        stateSize = 0,\n        height = 1.1 * width / 2 + MARGIN.top + MARGIN.bottom;\n      setDimensions({height, width, stateSize, MARGIN});\n    }\n  },[])\n\n  useEffect(() => {\n    updateDimensions()\n    window.addEventListener(\"resize\", updateDimensions)\n  }, [containerRef]);\n\n  const radius = dimensions.width / 4;\n  const rScale = scaleLinear()\n    .domain([-50, 50])\n    .range([0, radius]);\n    \n  return (\n    <section ref={containerRef} id=\"us-overall\" className=\"mobility-chart\">\n      <h3>Back to Shops, But Not Offices</h3>\n      <p className=\"chart-subtitle\">US average mobility in Apr. and May 2021</p>\n      <p className=\"chart-subtitle\">(compared to baseline in Jan. and Feb. 2020)</p>\n      <svg width={dimensions.width} height={dimensions.height}>\n        <g\n          className=\"chart\"\n          transform={`translate(${dimensions.width / 2}, ${ (dimensions.height+20) / 2})`}>\n          <GradientLegend\n            colorScale={residentialColorScale}\n            x={mobile ? - dimensions.width / 6 : - dimensions.width / 8}\n            y={ -(radius + dimensions.MARGIN.top / 2)}\n            width={mobile ?  dimensions.width / 3 : dimensions.width / 4}\n            height={20}\n            forMap={false}/>\n          <RadarChart\n            data={data}\n            stateAbbr=\"us\"\n            radius={radius}\n            mobility={mobility}\n            rScale={rScale}\n            angleSlice={angleSlice}\n            colorScale={residentialColorScale}\n            colorColumn={residentialColorColumn}\n            telework={data.percent_telework}/>\n        </g>\n      </svg>\n      <div className=\"chart-notes\">\n      <p className=\"source\">Data Source: Google Mobility Reports</p>\n      </div>\n    </section>\n  )\n}\n\nexport default UsOverall;","const stateData = [\n  {\n    state_full: 'Example',\n    state_postal: 'State',\n    row: -1,\n    column: 5\n  },\n  {\n    state_full: 'Alabama',\n    state_postal: 'AL',\n    row: 5,\n    column: 6\n  },\n  {\n    state_full: 'Alaska',\n    state_postal: 'AK',\n    row: -1,\n    column: 0\n  },\n  {\n    state_full: 'Arizona',\n    state_postal: 'AZ',\n    row: 4,\n    column: 1\n  },\n  {\n    state_full: 'Arkansas',\n    state_postal: 'AR',\n    row: 4,\n    column: 4\n  },\n  {\n    state_full: 'California',\n    state_postal: 'CA',\n    row: 3,\n    column: 0\n  },\n  {\n    state_full: 'Colorado',\n    state_postal: 'CO',\n    row: 3,\n    column: 2\n  },\n  {\n    state_full: 'Connecticut',\n    state_postal: 'CT',\n    row: 2,\n    column: 9\n  },\n  {\n    state_full: 'District of Columbia',\n    state_postal: 'DC',\n    row: 4,\n    column: 8\n  },\n  {\n    state_full: 'Delaware',\n    state_postal: 'DE',\n    row: 3,\n    column: 9\n  },\n  {\n    state_full: 'Florida',\n    state_postal: 'FL',\n    row: 6,\n    column: 8\n  },\n  {\n    state_full: 'Georgia',\n    state_postal: 'GA',\n    row: 5,\n    column: 7\n  },\n  {\n    state_full: 'Hawaii',\n    state_postal: 'HI',\n    row: 6,\n    column: 0\n  },\n  {\n    state_full: 'Idaho',\n    state_postal: 'ID',\n    row: 1,\n    column: 1\n  },\n  {\n    state_full: 'Illinois',\n    state_postal: 'IL',\n    row: 1,\n    column: 6\n  },\n  {\n    state_full: 'Indiana',\n    state_postal: 'IN',\n    row: 2,\n    column: 5\n  },\n  {\n    state_full: 'Iowa',\n    state_postal: 'IA',\n    row: 2,\n    column: 4\n  },\n  {\n    state_full: 'Kansas',\n    state_postal: 'KS',\n    row: 4,\n    column: 3\n  },\n  {\n    state_full: 'Kentucky',\n    state_postal: 'KY',\n    row: 3,\n    column: 5\n  },\n  {\n    state_full: 'Louisiana',\n    state_postal: 'LA',\n    row: 5,\n    column: 4\n  },\n  {\n    state_full: 'Maine',\n    state_postal: 'ME',\n    row: -1,\n    column: 10\n  },\n  {\n    state_full: 'Maryland',\n    state_postal: 'MD',\n    row: 3,\n    column: 8\n  },\n  {\n    state_full: 'Massachusetts',\n    state_postal: 'MA',\n    row: 1,\n    column: 9\n  },\n  {\n    state_full: 'Michigan',\n    state_postal: 'MI',\n    row: 1,\n    column: 7\n  },\n  {\n    state_full: 'Minnesota',\n    state_postal: 'MN',\n    row: 1,\n    column: 4\n  },\n  {\n    state_full: 'Mississippi',\n    state_postal: 'MS',\n    row: 5,\n    column: 5\n  },\n  {\n    state_full: 'Missouri',\n    state_postal: 'MO',\n    row: 3,\n    column: 4\n  },\n  {\n    state_full: 'Montana',\n    state_postal: 'MT',\n    row: 1,\n    column: 2\n  },\n  {\n    state_full: 'Nebraska',\n    state_postal: 'NE',\n    row: 3,\n    column: 3\n  },\n  {\n    state_full: 'Nevada',\n    state_postal: 'NV',\n    row: 2,\n    column: 1\n  },\n  {\n    state_full: 'New Hampshire',\n    state_postal: 'NH',\n    row: 0,\n    column: 10\n  },\n  {\n    state_full: 'New Jersey',\n    state_postal: 'NJ',\n    row: 2,\n    column: 8\n  },\n  {\n    state_full: 'New Mexico',\n    state_postal: 'NM',\n    row: 4,\n    column: 2\n  },\n  {\n    state_full: 'New York',\n    state_postal: 'NY',\n    row: 1,\n    column: 8\n  },\n  {\n    state_full: 'North Carolina',\n    state_postal: 'NC',\n    row: 4,\n    column: 6\n  },\n  {\n    state_full: 'North Dakota',\n    state_postal: 'ND',\n    row: 1,\n    column: 3\n  },\n  {\n    state_full: 'Ohio',\n    state_postal: 'OH',\n    row: 2,\n    column: 6\n  },\n  {\n    state_full: 'Oklahoma',\n    state_postal: 'OK',\n    row: 5,\n    column: 3\n  },\n  {\n    state_full: 'Oregon',\n    state_postal: 'OR',\n    row: 2,\n    column: 0\n  },\n  {\n    state_full: 'Pennsylvania',\n    state_postal: 'PA',\n    row: 2,\n    column: 7\n  },\n  {\n    state_full: 'Rhode Island',\n    state_postal: 'RI',\n    row: 2,\n    column: 10\n  },\n  {\n    state_full: 'South Carolina',\n    state_postal: 'SC',\n    row: 4,\n    column: 7\n  },\n  {\n    state_full: 'South Dakota',\n    state_postal: 'SD',\n    row: 2,\n    column: 3\n  },\n  {\n    state_full: 'Tennessee',\n    state_postal: 'TN',\n    row: 4,\n    column: 5\n  },\n  {\n    state_full: 'Texas',\n    state_postal: 'TX',\n    row: 6,\n    column: 3\n  },\n  {\n    state_full: 'Utah',\n    state_postal: 'UT',\n    row: 3,\n    column: 1\n  },\n  {\n    state_full: 'Vermont',\n    state_postal: 'VT',\n    row: 0,\n    column: 9\n  },\n  {\n    state_full: 'Virginia',\n    state_postal: 'VA',\n    row: 3,\n    column: 7\n  },\n  {\n    state_full: 'Washington',\n    state_postal: 'WA',\n    row: 1,\n    column: 0\n  },\n  {\n    state_full: 'West Virginia',\n    state_postal: 'WV',\n    row: 3,\n    column: 6\n  },\n  {\n    state_full: 'Wisconsin',\n    state_postal: 'WI',\n    row: 1,\n    column: 5\n  },\n  {\n    state_full: 'Wyoming',\n    state_postal: 'WY',\n    row: 2,\n    column: 2\n  }\n]\nexport default stateData;\n","import { useState, useEffect } from \"react\";\nimport { csv, extent } from \"d3\";\nimport stateData from \"./stateData.js\";\n\nconst readData = (url) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    csv(url).then(rawData => {\n      rawData.forEach((d) => {\n        stateData.forEach((s) => {\n          if (d.state == s.state_full) {\n            d.row = +s.row;\n            d.column = s.column;\n            d.groce_pharm_change_diff = +d.groce_pharm_change_diff;\n            d.retail_recreation_change_diff = +d.retail_recreation_change_diff;\n            d.transit_change_diff = +d.transit_change_diff;\n            d.workplaces_change_diff = +d.workplaces_change_diff;\n            d.parks_change_diff = +d.parks_change_diff;\n            d.residential_change_diff = +d.residential_change_diff;\n            d.percent_telework = +d.percent_telework;\n            // d.avg_aggr_mobility = (d.groce_pharm_change_diff+\n            //   d.retail_recreation_change_diff+\n            //   d.transit_change_diff+\n            //   d.workplaces_change_diff)/4\n          } \n        });\n      });\n      // drop duplicates\n      setData([...new Map(rawData.map(obj => [JSON.stringify(obj), obj])).values()])\n    });\n  }, []);\n  return data;\n};\n\nexport default readData;\n","import React from \"react\";\nimport {scaleLinear} from \"d3\";\nimport readData from \"../data/readData.js\";\nimport RadarChart from \"./RadarChart\";\n\n// mobility data url\nconst csvUrl = \"https://gist.githubusercontent.com/sabrinamochi/6b1a8d203618ed230c7254bf8c53dfd2\" +\n    \"/raw/cd80388fa3b33d48a8e324331bbcb83531c883c8/clean-avg-mobility-data.csv\";\n\nconst Map = ({onChangeTooltipValue, stateSize, mobility, colorScale, colorColumn, mobile}) => {\n  // load data\n  const data = readData(csvUrl);\n  if (!data) {\n    return <pre>Loading...</pre>;\n  } \n  // define padding\n  const statePaddingX = mobile\n    ? 3\n    : 5;\n  const statePaddingY = mobile\n    ? 12\n    : 5;\n\n  // function to calculate state location\n  const y_row = ({row}) => row * (stateSize + statePaddingY);\n  const x_column = ({column}) => column * (stateSize + statePaddingX);\n\n  const angleSlice = (Math.PI * 2) / mobility.length;\n\n  const radius = stateSize / 2;\n  const rScale = scaleLinear()\n    .domain([-50, 50])\n    .range([0, radius]);\n\n  const selNeStates = [\n    \"NY\",\n    \"NJ\",\n    \"MA\",\n    \"VT\",\n    \"RI\",\n    \"CT\",\n    \"NH\",\n    \"ME\"\n  ];\n\n  const selWStates = [\n   \"AK\",\"WA\",\"OR\",\"ID\",\"NV\",\"UT\",\"AZ\",\n   \"MT\",\"WY\"\n  ];\n\n  const selMwAndSStates = [\n    \"SD\",\"NE\",\"KS\",\"OK\",\"IA\",\"MO\",\"AR\",\n    \"WI\", \"IN\", \"KY\",\"TN\",\"MS\",\"IL\",\"OH\",\n    \"NC\", \"AL\", \"SC\", \"GA\"\n  ];\n\n  const handleMouseOver = (selData) => {\n    const circlePosition = {\n      circleX: x_column(selData) + stateSize * 4,\n      circleY: y_row(selData) + stateSize * 2\n    }\n    const updatedData = {\n      ...selData,\n      ...circlePosition\n    }\n    onChangeTooltipValue(updatedData, true)\n  }\n\n  const handleMouseOut = () => {\n    onChangeTooltipValue({\n      value: \"\"\n    }, false)\n  }\n\n  return data.map((d, i) => {\n    const assignedClassName = [\"radar\", `${d[\"State Code\"]}-radar`];\n    if (selNeStates.includes(d[\"State Code\"])) {\n      assignedClassName.push(\"ne\");\n    } else if (selWStates.includes(d[\"State Code\"])) {\n      assignedClassName.push(\"west\");\n    } else if (selMwAndSStates.includes(d[\"State Code\"])) {\n      assignedClassName.push(\"mw-s\");\n    }\n    return (\n      <g\n        onMouseOver={() => handleMouseOver(d)}\n        onMouseOut={handleMouseOut}\n        className={assignedClassName.join(\" \")}\n        key={`${d.state}-${i}`}\n        transform={`translate(${x_column(d) + stateSize / 2}, ${y_row(d) + stateSize / 2})`}>\n        <RadarChart\n          data={d}\n          stateAbbr={d[\"State Code\"]}\n          region={d.Region}\n          mobility={mobility}\n          radius={radius}\n          rScale={rScale}\n          angleSlice={angleSlice}\n          colorScale={colorScale}\n          colorColumn={colorColumn}\n          mobile={mobile}/>\n      </g>\n    )\n  });\n};\n\nexport default Map;\n","import \"../styles.css\";\nimport {select, selectAll} from \"d3\";\n\nconst ScrollingSteps = {\n  \"explain\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".radar-path\").classed(\"show\", true)\n      selectAll(\".radar-circle\").classed(\"show\", true)\n    } else {\n      selectAll(\".radar-path\").classed(\"show\", false)\n      selectAll(\".radar-circle\").classed(\"show\", false)\n    }\n  },\n  \"parks\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".radar-path\").classed(\"show\", false)\n      selectAll(\".radar-circle\").classed(\"show\", false)\n      selectAll(\".radar-circle-parks_change_diff\").classed(\"show\", true)\n      selectAll(\".ak-legend\").classed(\"show\", true)\n    } else {\n      selectAll(\".radar-circle-parks_change_diff\").classed(\"show\", false)\n      selectAll(\".radar-path\").classed(\"show\", true)\n      selectAll(\".radar-circle\").classed(\"show\", true)\n    }\n  },\n  \"workplaces\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".radar-circle-parks_change_diff\").classed(\"show\", false)\n      selectAll(\".radar-circle-workplaces_change_diff\").classed(\"show\", true)\n    } else {\n      selectAll(\".radar-circle-workplaces_change_diff\").classed(\"show\", false)\n      selectAll(\".radar-circle-parks_change_diff\").classed(\"show\", true)\n    }\n  },\n  \"dc\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".radar-circle-workplaces_change_diff\").classed(\"show\", false)\n      selectAll(\".DC-radar path, .DC-radar circle\").classed(\"show\", true)\n    } else {\n      selectAll(\".DC-radar path, .DC-radar circle\").classed(\"show\", false)\n      selectAll(\".radar-circle-workplaces_change_diff\").classed(\"show\", true)\n    }\n  },\n  \"ne\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".DC-radar path, .DC-radar circle\").classed(\"show\", false)\n      selectAll(\".ne path, .ne circle\").classed(\"show\", true)\n    } else {\n      selectAll(\".ne path, .ne circle\").classed(\"show\", false)\n      selectAll(\".DC-radar path, .DC-radar circle\").classed(\"show\", true)\n    }\n  },\n  \"west\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".ne path, .ne circle\").classed(\"show\", false)\n      selectAll(\".west path, .west circle\").classed(\"show\", true)\n    } else {\n      selectAll(\".west path, .west circle\").classed(\"show\", false)\n      selectAll(\".ne path, .ne circle\").classed(\"show\", true)\n    }\n  },\n  \"mw-s\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".west path, .west circle\").classed(\"show\", false)\n      selectAll(\".mw-s path, .mw-s circle\").classed(\"show\", true)\n    } else {\n      selectAll(\".mw-s path, .mw-s circle\").classed(\"show\", false)\n      selectAll(\".west path, .west circle\").classed(\"show\", true)\n    }\n  },\n  \"vac\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".west path, .west circle\").classed(\"show\", false)\n      selectAll(\".radar-path\").classed(\"show\", true)\n      selectAll(\".radar-circle\").classed(\"show\", true)\n\n    } else {\n      selectAll(\".radar-path\").classed(\"show\", false)\n      selectAll(\".radar-circle\").classed(\"show\", false)\n      selectAll(\".west path, .west circle\").classed(\"show\", true)\n    }\n  },\n  \"telework\": (direction) => {\n    return;\n  },\n  \"invisible\": (direction) => {\n    if (direction == \"down\") {\n      selectAll(\".mobility-chart\").style(\"z-index\", 1)\n    } else {\n      selectAll(\".mobility-chart\").style(\"z-index\", -1)\n    }\n  }\n}\n\nexport default ScrollingSteps;","import \"./styles.css\";\nimport React, {useRef, useEffect, useState, useCallback} from \"react\";\nimport scrollama from \"scrollama\";\nimport Stickyfill from 'stickyfilljs';\nimport {selectAll, select, scaleLinear, color} from \"d3\";\nimport Map from \"./components/Map\";\nimport Grid from \"./components/Grid\";\nimport GradientLegend from \"./components/GradientLegend\";\n// import TeleworkLegend from \"./components/TeleworkLegend\";\nimport ScrollingSteps from \"./components/ScrollingSteps\";\n\n// define chart dimensions\nconst initialMobile = window.innerWidth <= 768\n  ? true\n  : false;\n\nconst initialDimensions = {\n  height: 0,\n  width: 0,\n  stateSize: 0,\n  MARGIN: {\n    top: initialMobile\n      ? 60\n      : 100,\n    right: initialMobile\n      ? 20\n      : 120,\n    bottom: initialMobile\n      ? 40\n      : 35,\n    left: initialMobile\n      ? 20\n      : 120\n  }\n};\n\n// set up tooltip\nconst initialTooltipValue = {\n  value: \"\"\n};\n\n// set up initial radius for tutorial radar chart\nconst scrollyExampleRadarR = 80,\n  mobileScreenTopExampleRadarR = 30;\n\n// initiate scroller\nconst scroller = scrollama();\n\nconst UsByState = ({residentialColorScale, mobility, residentialColorColumn}) => {\n  const [dimensions,\n    setDimensions] = useState(initialDimensions);\n  const [mobile,\n    setMobile] = useState(initialMobile);\n  const [scrollingTextWidth,\n    setScrollingTextWidth] = useState(0)\n  const [tooltipValue,\n    setTooltip] = useState(initialTooltipValue);\n  const [hovered,\n    setHovered] = useState(false);\n  const [colorScale,\n    setColorScale] = useState(residentialColorScale);\n  const [colorColumn,\n    setColorColumn] = useState(residentialColorColumn);\n  const teleworkColorScale = () => scaleLinear()\n    .domain([10, 40])\n    .range([\"#858585\", \"#FFC233\"]);\n\n  // update dimensions and provide nodes to scroller after chart and scrolling\n  // texts containers are rendered\n  const chartContainerRef = useRef(null);\n  const textsContainerRef = useRef(null);\n  const scrollingTextRef = useRef(null);\n\n  // Scrollytelling: set up function to handle scrolling text enter\n  let currentStep;\n  const handleStepEnter = useCallback(({index, element, direction}) => {\n    currentStep = select(element).attr('data-step')\n    if (currentStep) {\n      ScrollingSteps[currentStep](direction);\n      if (currentStep === \"telework\") {\n        setColorScale(teleworkColorScale)\n        setColorColumn(\"percent_telework\")\n      } else {\n        setColorScale(residentialColorScale)\n        setColorColumn(\"residential\")\n      }\n    }\n  }, []);\n\n  const setupScroller = useCallback(() => {\n    const $graphic = select(\".mobility-chart\")\n    Stickyfill.add($graphic.node());\n    const $step = selectAll(\".scrolling-text\")\n    scroller.setup({\n      step: $step.nodes(),\n      offset: 0.8\n    }).onStepEnter(handleStepEnter)\n  }, [])\n\n  const updateDimensions = useCallback(() => {\n    if (chartContainerRef.current) {\n      setMobile(window.innerWidth <= 768\n        ? true\n        : false)\n      const width = chartContainerRef.current.clientWidth,\n        MARGIN = {\n          top: mobile\n            ? 60\n            : 100,\n          right: mobile\n            ? 20\n            : 120,\n          bottom: mobile\n            ? 40\n            : 35,\n          left: mobile\n            ? 20\n            : 120\n        },\n        stateSize = (width - MARGIN.left - MARGIN.right) / 12,\n        height = mobile\n          ? stateSize * 8.5 + MARGIN.top + MARGIN.bottom\n          : stateSize * 7.5 + MARGIN.top + MARGIN.bottom;\n      setDimensions({height, width, stateSize, MARGIN});\n    }\n    if (textsContainerRef.current) {\n      setScrollingTextWidth(scrollingTextRef.current.querySelector(\"p\").clientWidth)\n      setupScroller()\n    }\n  }, [])\n  useEffect(() => {\n    updateDimensions()\n    window.addEventListener(\"resize\", updateDimensions)\n  }, [chartContainerRef, textsContainerRef, scrollingTextRef]);\n\n  // update tooltip value if user hovers on radar\n  const onChangeTooltipHandler = useCallback((t, h) => {\n    setTooltip(t);\n    setHovered(h)\n  }, [])\n\n  const switchColorScale = useCallback(() => {\n    if (colorColumn === \"residential\") {\n      setColorColumn(\"percent_telework\")\n      setColorScale(teleworkColorScale)\n    } else {\n      setColorColumn(\"residential\")\n      setColorScale(residentialColorScale)\n    }\n  }, [colorColumn])\n\n  return (\n    <section id=\"scrolling-map\">\n      <div ref={chartContainerRef} className=\"mobility-chart\">\n        <div style={{\n          position: \"relative\"\n        }}>\n          <h3>Mobility by State</h3>\n          <p className=\"chart-subtitle\"></p>\n          <div id=\"mobile-radar-legend\">\n            <svg width={dimensions.width} height={mobileScreenTopExampleRadarR * 3}>\n              <g\n                transform={`translate(${dimensions.width / 2}, ${mobileScreenTopExampleRadarR + mobileScreenTopExampleRadarR * 0.6})`}>\n                <Grid\n                  stateAbbr={\"top-example\"}\n                  region={null}\n                  mobility={mobility}\n                  radius={mobileScreenTopExampleRadarR}\n                  rScale={scaleLinear()\n                  .domain([-50, 50])\n                  .range([0, mobileScreenTopExampleRadarR])}\n                  angleSlice={(Math.PI * 2) / mobility.length}\n                  telework={0}/>\n              </g>\n            </svg>\n          </div>\n          <div className=\"button-container\">\n            <span>Colored by\n            </span>\n            <button onClick={switchColorScale}>\n              {colorColumn === \"residential\"\n                ? `Time spent at home`\n                : `% Teleworking`}\n            </button>\n          </div>\n          <svg width={dimensions.width} height={dimensions.height}>\n            <g\n              className=\"chart\"\n              transform={`translate(${dimensions.MARGIN.left}, ${dimensions.MARGIN.top})`}>\n              <GradientLegend\n                colorScale={colorScale}\n                colorColumn={colorColumn}\n                x={mobile\n                ? dimensions.width / 2 - dimensions.MARGIN.left - dimensions.width / 6\n                : dimensions.width / 2 - dimensions.MARGIN.left - dimensions.width / 8}\n                y={- dimensions.MARGIN.top * .95}\n                width={mobile\n                ? dimensions.width / 3\n                : dimensions.width / 4}\n                height={20}\n                forMap={true}/>\n              <Map\n                onChangeTooltipValue={onChangeTooltipHandler}\n                stateSize={dimensions.stateSize}\n                mobility={mobility}\n                colorScale={colorScale}\n                colorColumn={colorColumn}\n                mobile={mobile}/>\n            </g>\n          </svg>\n          <div className=\"chart-notes\">\n            <p className=\"source\">Data Source: Google Mobility Reports, Household Pulse Survey\n              <br></br>\n              The baseline represents average mobility trends seen in January and February\n              2020. Interested in how I conducted the data analysis? View it <a\n                href=\"https://sabrinamochi.github.io/react-us-mobility/google-mobility-reports-analysis.html\">here</a>.</p>\n          </div>\n          <div\n            className=\"tooltip\"\n            style={{\n            left: mobile\n              ? 0\n              : `${tooltipValue.circleX}px`,\n            top: mobile\n              ? 0\n              : `${tooltipValue.circleY}px`,\n            opacity: hovered\n              ? 1\n              : 0\n          }}>\n            <h5>{tooltipValue.state}</h5>\n            <div>\n              <p>retail<br></br>recreation</p>\n              <p>{`${Math.round(10 * tooltipValue.retail_recreation_change_diff) / 10}%`}</p>\n            </div>\n            <div>\n              <p>grocery<br></br>pharmacy</p>\n              <p>{`${Math.round(10 * tooltipValue.groce_pharm_change_diff) / 10}%`}</p>\n            </div>\n            <div>\n              <p>transit<br></br>stations</p>\n              <p>{`${Math.round(10 * tooltipValue.transit_change_diff) / 10}%`}</p>\n            </div>\n            <div>\n              <p>work<br></br>places</p>\n              <p>{`${Math.round(10 * tooltipValue.workplaces_change_diff) / 10}%`}</p>\n            </div>\n            <div>\n              <p>parks</p>\n              <p>{`${Math.round(10 * tooltipValue.parks_change_diff) / 10}%`}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div ref={textsContainerRef} className=\"scrolling-texts-container\">\n        <div ref={scrollingTextRef} className=\"scrolling-text\" data-step=\"explain\">\n          <p className=\"scrolling-text-title\">How to read</p>\n          <p>\n            The further the dot is away from the center, the more people visiting the\n            location compared to the pre-pandemic period, and vice versa.\n          </p>\n          <div>\n            <svg width={scrollingTextWidth} height={scrollyExampleRadarR * 3}>\n              <g\n                transform={`translate(${scrollingTextWidth / 2}, ${scrollyExampleRadarR + scrollyExampleRadarR * 0.6})`}>\n                <Grid\n                  stateAbbr={\"example\"}\n                  region={null}\n                  mobility={mobility}\n                  radius={scrollyExampleRadarR}\n                  rScale={scaleLinear()\n                  .domain([-50, 50])\n                  .range([0, scrollyExampleRadarR])}\n                  angleSlice={(Math.PI * 2) / mobility.length}\n                  telework={0}/>\n              </g>\n            </svg>\n          </div>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"parks\">\n          <p className=\"scrolling-text-title\">Parks</p>\n          <p>For example, visits to parks are way above the baseline in almost all states\n            except for D.C. and Hawaii.</p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"workplaces\">\n          <p className=\"scrolling-text-title\">Workplaces</p>\n          <p>But visits to workplaces remain below the pre-pandemic levels in every state.\n          </p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"dc\">\n          <p>\n            <span className=\"scrolling-text-title\">D.C. has the most significant reduction </span>in mobility patterns. Visits to different locations decline to about 40% below\n            pre-pandemic levels.\n          </p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"ne\">\n          <p>\n            <span className=\"scrolling-text-title\">Northeastern states </span>\n            still see people spending more time at home. At the beginning of the pandemic,\n            this region was hit particularly hard and under more stringent restrictions.</p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"west\">\n          <p>\n            <span className=\"scrolling-text-title\">A few states in the west region </span>\n            see close-to-normal mobility trends in indoor commercial locations, such as\n            shops and restaurants.</p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"mw-s\">\n          <p>\n            <span className=\"scrolling-text-title\">About two-thirds of the states in the midwest and south regions </span>\n            see commercial activities heating up. Mobility trends in supermarkets, cafes and\n            transit stations reach or even surpass baseline levels. The amount of time\n            people spent at home is the same as what it was before the pandemic.\n          </p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"vac\">\n          <p>\n            <span className=\"scrolling-text-title\">Has vaccination changed people's mobility patterns? </span>There's no significant correlation between vaccination rates and mobility\n            based on my analysis, echoing a survey result from\n            <a href=\"https://www.cardify.ai/reports/pandemic-thrivers\">Cardify</a>, which\n            concludes that higher vaccination rates haven't been the primary driver for\n            economic activity.\n          </p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"telework\">\n          <p>\n            <span className=\"scrolling-text-title\">But the percentage of people working remotely </span>\n            highly correlates with the changes in mobility patterns. States with more people\n            reporting being able to telework also have lower mobility in most locations.</p>\n          <br></br>\n          <p>Hover over each state to see more!</p>\n        </div>\n        <div className=\"scrolling-text\" data-step=\"invisible\">\n          <p></p>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default UsByState\n","import \"./styles.css\";\nimport React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { scaleLinear } from \"d3-scale\";\nimport UsOverall from \"./UsOverall\";\nimport UsByState from \"./UsByState\";\n\n\nconst colorScale = () => (scaleLinear()\n    .domain([0,10])\n    .range([\"#38BFCD\", \"#EE694B\"]));\n  \nconst mobility = [\n\"retail_recreation_change_diff\",\n\"groce_pharm_change_diff\",\n\"parks_change_diff\",\n\"transit_change_diff\",\n\"workplaces_change_diff\"\n]\n\nconst App = () => {\n  return (\n    <main>\n      <section className=\"content\">\n        <h1>Where People Are Moving Again</h1>\n        <div>\n          <p>City streets are getting crowded, airplanes are filling up, and restaurants are allowing people to dine in again. </p>\n          <br></br>\n          <p>As vaccine rollout began last December and restrictions on social distancing have eased, America is on track to return to normalcy.  </p>\n          <br></br>\n          <p>Google COVID-19 Community Mobility Reports show how visits and length of stay in different locations have changed compared to a baseline period before the pandemic.</p>\n        </div>\n      </section>\n      <UsOverall residentialColorScale={colorScale()} mobility={mobility} residentialColorColumn=\"residential\"/>\n      <section className=\"content\">\n        <div>\n          <p>Across the U.S., movement of people to shopping centers, grocery stores and train stations is almost the same as what it was during the pre-pandemic days.</p>\n          <br></br>\n          <p>However, visits to workplaces are still down 20% from the baseline.  </p>\n          <br></br>\n          <p>A further inspection of the state-level data reveals that while visits to workplaces remain below the baseline in all states, mobility trends in other locations vary across the country. </p>\n        </div>\n      </section>\n      <UsByState residentialColorScale={colorScale} mobility={mobility} residentialColorColumn=\"residential\"/>\n    </main>\n  )\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}